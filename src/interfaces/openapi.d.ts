/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/user/": {
    get: operations["getAllUser"];
    put: operations["updateUserInfo"];
  };
  "/test/init": {
    post: operations["init"];
  };
  "/api/video/upload": {
    post: operations["uploadToM3u8"];
  };
  "/api/video/saveAsM3u8/**": {
    post: operations["upload"];
  };
  "/api/video/generateM3u8File/**": {
    post: operations["preview"];
  };
  "/api/user/register": {
    post: operations["register"];
  };
  "/api/user/login": {
    post: operations["login"];
  };
  "/api/video/download/": {
    get: operations["download"];
  };
  "/api/video/": {
    get: operations["getAllVideo"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    User: {
      /** Format: int32 */
      id?: number;
      username?: string;
      emailAddress?: string;
      password?: string;
    };
    ResponseDTOUserDTO: {
      message?: string;
      data?: components["schemas"]["UserDTO"];
    };
    UserDTO: {
      /** Format: int32 */
      id?: number;
      emailAddress?: string;
      username?: string;
    };
    ResponseDTOString: {
      message?: string;
      data?: string;
    };
    UserLoginDTO: {
      emailAddress?: string;
      password?: string;
    };
    ResponseDTOUserLoginResponseDTO: {
      message?: string;
      data?: components["schemas"]["UserLoginResponseDTO"];
    };
    UserLoginResponseDTO: {
      token?: string;
      /** Format: int32 */
      id?: number;
      emailAddress?: string;
      username?: string;
    };
    ResponseDTOListVideo: {
      message?: string;
      data?: components["schemas"]["Video"][];
    };
    Video: {
      /** Format: int32 */
      id?: number;
      url?: string;
      coverUrl?: string;
      title?: string;
      detail?: string;
      /** Format: int32 */
      playTimes?: number;
      /** Format: date-time */
      uploadDate?: string;
      /** Format: int32 */
      uploadUserId?: number;
      /** Format: date-time */
      length?: string;
    };
    ResponseDTOListUserDTO: {
      message?: string;
      data?: components["schemas"]["UserDTO"][];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  getAllUser: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseDTOListUserDTO"];
        };
      };
    };
  };
  updateUserInfo: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseDTOUserDTO"];
        };
      };
    };
  };
  init: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseDTOString"];
        };
      };
    };
  };
  uploadToM3u8: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  upload: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  preview: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  register: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseDTOUserDTO"];
        };
      };
    };
  };
  login: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserLoginDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseDTOUserLoginResponseDTO"];
        };
      };
    };
  };
  download: {
    parameters: {
      query: {
        url: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  getAllVideo: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseDTOListVideo"];
        };
      };
    };
  };
}
